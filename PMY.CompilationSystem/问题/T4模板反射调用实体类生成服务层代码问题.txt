1、在T4模板中反射调用实体类出现的问题：
--------------------------------------------------------------问题代码----------------------------------------------------------------------------------
<#
System.Reflection.Assembly assembly = System.Reflection.Assembly.LoadFile(@"F:\PMY.MyBlog\PMY.CompilationSystem\PMY.CompilationSystem.Model\bin\Debug\PMY.CompilationSystem.Model.dll");
#>
<#@ output extension=".cs" #>
using PMY.CompilationSystem.IService;
using PMY.CompilationSystem.Model.Models;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PMY.CompilationSystem.Service
{
   
<#
// Emit Entity Types

foreach (Type t in assembly.GetTypes())
{
    if (t.FullName.Contains("PMY.CompilationSystem.Model.Models"))
	{
#>	
	public partial class <#=t.Name#>Service :BaseService<<#=t.Name#>>, I<#=t.Name#>Service
    {
	    public <#=t.Name#>Service(DbContext context, IDBSession dbSession) 
            : base(context, dbSession)
        {

        }     
    }
<#
   }
}
#>
	
}
------------------------------------------------------------------------------------------------------------------------------------------------------------
以上写法反射调用实体类的dll，可以正常生成相应代码，但是会使反射的dll文件一直被占用，而且不好的是反射dll用的是绝对路径，一旦项目路径变了，模板对应的反射路径也得改。
-------------------------------------------------------------------异常------------------------------------------------------------------------------------------
无法将文件“obj\Debug\PMY.CompilationSystem.Model.dll”复制到“bin\Debug\PMY.CompilationSystem.Model.dll”。文件“bin\Debug\PMY.CompilationSystem.Model.dll”正由另一进程使用，因此该进程无法访问此文件。	PMY.CompilationSystem.Model
-------------------------------------------------------------------------------------------------------------------------------------------------------------			


解决：
--------------------------------------------------------------修改后正常代码--------------------------------------------------------------------------------
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO"#>
<#@ import namespace="System.Reflection" #>
<#@ output extension=".cs" #>

<#
    string _filepath = @"PMY.CompilationSystem.Model\bin\Debug\PMY.CompilationSystem.Model.dll";
    byte[] fileData= File.ReadAllBytes(_filepath);
    Assembly _assembly = Assembly.Load(fileData);
    //var _assembly = System.Reflection.Assembly.GetAssembly(typeof(PMY.CompilationSystem.Model));
#>
using PMY.CompilationSystem.IService;
using PMY.CompilationSystem.Model.Models;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PMY.CompilationSystem.Service
{
   
<#
// Emit Entity Types

foreach (Type t in _assembly.GetTypes())
{
    if (t.FullName.Contains("PMY.CompilationSystem.Model.Models"))
	{
#>	
	public partial class <#=t.Name#>Service :BaseService<<#=t.Name#>>, I<#=t.Name#>Service
    {
	    public <#=t.Name#>Service(DbContext context, IDBSession dbSession) 
            : base(context, dbSession)
        {

        }     
    }
<#
   }
}
#>
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------
	
